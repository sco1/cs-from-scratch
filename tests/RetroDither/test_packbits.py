from array import array
from functools import partial

import pytest

from cs_from_scratch.RetroDither.macpaint import unsigned_packbits

B_ARRAY_P = partial(array, "B")


def test_apple_rle_example() -> None:
    # Example from:
    # web.archive.org/web/20080705155158/http://developer.apple.com/technotes/tn/tn1023.html
    # fmt: off
    UNPACKED = B_ARRAY_P(
        [
            0xAA, 0xAA, 0xAA, 0x80, 0x00, 0x2A, 0xAA, 0xAA, 0xAA, 0xAA, 0x80, 0x00,
            0x2A, 0x22, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA, 0xAA,
        ]
    )
    # fmt: on

    TRUTH_PACKED = B_ARRAY_P(
        [0xFE, 0xAA, 0x02, 0x80, 0x00, 0x2A, 0xFD, 0xAA, 0x03, 0x80, 0x00, 0x2A, 0x22, 0xF7, 0xAA]
    )

    assert unsigned_packbits(UNPACKED) == TRUTH_PACKED


RLE_TEST_CASES = (
    (
        [0x55, 0x55, 0xBB, 0xBB, 0x55, 0xBB, 0xBB, 0x55],
        [0xFF, 0x55, 0xFF, 0xBB, 0x00, 0x55, 0xFF, 0xBB, 0x00, 0x55],
    ),
    ([0x00, 0x01, 0x02, 0x03, 0x04], [0x04, 0x00, 0x01, 0x02, 0x03, 0x04]),
    ([0x00], [0x00, 0x00]),
    ([0x11, 0x11, 0x11, 0x11], [0xFD, 0x11]),
    ([0x11, 0x11, 0x11, 0x11, 0x22, 0x22, 0x22, 0x22], [0xFD, 0x11, 0xFD, 0x22]),
)


@pytest.mark.parametrize(("unpacked", "truth_packed"), RLE_TEST_CASES)
def test_unsigned_packbits(unpacked: list[int], truth_packed: list[int]) -> None:
    unpacked_a = B_ARRAY_P(unpacked)
    truth_packed_a = B_ARRAY_P(truth_packed)

    assert unsigned_packbits(unpacked_a) == truth_packed_a
